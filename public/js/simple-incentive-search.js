function initializeSimpleIncentiveSearch(){console.log("Initializing simple incentive search...");const e=document.getElementById("business-search-form");if(!e)return void console.error("Search form not found");e.onsubmit=null;const n=e.cloneNode(!0);e.parentNode.replaceChild(n,e),document.getElementById("business-search-form").addEventListener("submit",handleIncentiveSearch),console.log("Simple incentive search initialized successfully")}async function handleIncentiveSearch(e){e.preventDefault(),console.log("Simple incentive search: Form submitted");const n=document.getElementById("business-name")?.value||"",t=document.getElementById("address")?.value||"";if(!n.trim()&&!t.trim())return void alert("Please enter either a business name or an address to search");const i={businessName:n.trim(),address:t.trim()};console.log("Simple incentive search: Searching with",i);try{showIncentiveLoadingIndicator(),displayIncentiveSearchResults(await performSimpleIncentiveSearch(i))}catch(e){console.error("Simple incentive search error:",e),showIncentiveErrorMessage("Error searching for businesses: "+e.message)}}async function performSimpleIncentiveSearch(e){console.log("Performing simple incentive search...");try{const n=getIncentiveBaseURL(),t=new URLSearchParams;t.append("operation","search"),e.businessName&&t.append("business_name",e.businessName),e.address&&t.append("address",e.address);const i=`${n}/api/business.js?${t.toString()}`;console.log("Simple incentive search API URL:",i);const s=await fetch(i,{method:"GET",headers:{"Content-Type":"application/json; charset=UTF-8"}});if(!s.ok)throw new Error(`Search failed: ${s.status}`);const o=((await s.json()).results||[]).filter((e=>!0!==e.is_chain||(console.log(`Filtering out parent chain: ${e.bname}`),!1)));return console.log(`Simple incentive search: Found ${o.length} businesses`),o}catch(e){throw console.error("Simple incentive search error:",e),e}}function displayIncentiveSearchResults(e){console.log(`Displaying ${e.length} businesses in incentive search results`);const n=document.getElementById("business-search-results");if(!n)return void console.error("Results container not found");if(n.innerHTML="",0===e.length)return n.innerHTML='\n            <div class="incentive-no-results">\n                <h3>No businesses found</h3>\n                <p>No businesses match your search criteria. Please try different search terms.</p>\n            </div>\n        ',void(n.style.display="block");const t=createIncentiveResultsTable(e);n.innerHTML=t,n.style.display="block",n.scrollIntoView({behavior:"smooth"}),console.log("Incentive search results displayed successfully")}function createIncentiveResultsTable(e){let n=`\n        <div class="incentive-results-container">\n            <h3>Search Results (${e.length} found)</h3>\n            <table class="incentive-results-table">\n                <thead>\n                    <tr>\n                        <th>Business Name</th>\n                        <th>Address</th>\n                        <th>Type</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n    `;return e.forEach((e=>{let t="";e.address1&&(t=e.address1,e.address2&&(t+=", "+e.address2),e.city&&(t+=", "+e.city),e.state&&(t+=", "+e.state),e.zip&&(t+=" "+e.zip));const i=getIncentiveBusinessTypeLabel(e.type),s=e.chain_id?'<span class="incentive-chain-badge">Chain</span>':"";let o="";const c=window.location.pathname;c.includes("incentive-view.html")?o=`\n                <button class="incentive-select-btn" onclick="selectBusinessForIncentiveView('${e._id}')">\n                    View Incentives\n                </button>\n            `:c.includes("incentive-add.html")?o=`\n                <button class="incentive-select-btn" onclick="selectBusinessForIncentiveAdd('${e._id}')">\n                    Add Incentive\n                </button>\n            `:c.includes("incentive-update.html")&&(o=`\n                <button class="incentive-select-btn" onclick="selectBusinessForIncentiveUpdate('${e._id}')">\n                    Update Incentives\n                </button>\n            `),n+=`\n            <tr class="incentive-business-row">\n                <td>${e.bname} ${s}</td>\n                <td>${t}</td>\n                <td>${i}</td>\n                <td>${o}</td>\n            </tr>\n        `})),n+="\n                </tbody>\n            </table>\n        </div>\n    ",n}function populateBusinessInfo(e){if(e){console.log("Populating business info with: ",e);try{const n=document.getElementById("business-name-display");n&&(n.textContent=e.bname||"");const t=document.getElementById("business-address-display");if(t){let n=e.address1||"";e.address2&&(n+=", "+e.address2),t.textContent=n}const i=document.getElementById("business-city-state-display");if(i){let n="";e.city&&(n+=e.city),e.state&&(n+=", "+e.state),e.zip&&(n+=" "+e.zip),i.textContent=n}const s=document.getElementById("business-phone-display");s&&(s.textContent=e.phone||"");const o=document.getElementById("business-type-display");o&&(o.textContent=getIncentiveBusinessTypeLabel(e.type)||""),console.log("Business info populated successfully")}catch(e){console.error("Error in populateBusinessInfo",e)}}else console.error("No business data provided to populateBusinessInfo")}function clearSearchResultsAndLoading(){const e=document.getElementById("business-search-results");e&&(e.style.display="none",e.innerHTML="")}async function fetchIncentiveBusinessDetails(e){const n=`${getIncentiveBaseURL()}/api/business.js?operation=get&id=${e}`;console.log("Fetching incentive business details:",n);const t=await fetch(n);if(!t.ok)throw new Error(`Failed to fetch business: ${t.status}`);return(await t.json()).result}function getIncentiveBaseURL(){return"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?`http://${window.location.host}`:window.location.origin}function getIncentiveBusinessTypeLabel(e){return{AUTO:"Automotive",BEAU:"Beauty",BOOK:"Bookstore",CLTH:"Clothing",CONV:"Convenience Store",DEPT:"Department Store",ELEC:"Electronics",ENTR:"Entertainment",FURN:"Furniture",FUEL:"Fuel Station",GIFT:"Gift Shop",GROC:"Grocery",HARDW:"Hardware",HEAL:"Health",JEWL:"Jewelry",OTHER:"Other",RX:"Pharmacy",REST:"Restaurant",RETAIL:"Retail",SERV:"Service",SPEC:"Specialty",SPRT:"Sporting Goods",TECH:"Technology",TOYS:"Toys"}[e]||e}function showIncentiveLoadingIndicator(e="Searching..."){const n=document.getElementById("business-search-results");n&&(n.innerHTML=`\n            <div class="incentive-loading">\n                <div class="incentive-spinner"></div>\n                <div class="incentive-loading-text">${e}</div>\n            </div>\n        `,n.style.display="block")}function hideIncentiveLoadingIndicator(){console.log("Hiding incentive loading indicator")}function showIncentiveErrorMessage(e){const n=document.getElementById("business-search-results");n&&(n.innerHTML=`\n            <div class="incentive-error">\n                <h3>Error</h3>\n                <p>${e}</p>\n                <button onclick="clearIncentiveResults()">Try Again</button>\n            </div>\n        `,n.style.display="block")}function clearIncentiveResults(){const e=document.getElementById("business-search-results");e&&(e.innerHTML="",e.style.display="none");const n=document.getElementById("business-name"),t=document.getElementById("address");n&&(n.value=""),t&&(t.value="")}function displayLocalIncentivesOnly(e,n,t){console.log(`Displaying local incentives only for ${n}`);let i=`\n        <fieldset id="incentives-section">\n            <legend>\n                <h3 class="caveat">Step 3: View Incentives for ${n}</h3>\n            </legend>\n    `;e&&0!==e.length?(i+='\n            <table class="results-table">\n                <thead>\n                    <tr>\n                        <th>Available</th>\n                        <th>Type</th>\n                        <th>Amount</th>\n                        <th>Information</th>\n                        <th>Date Added</th>\n                    </tr>\n                </thead>\n                <tbody>\n        ',e.forEach((e=>{i+=formatIncentiveRowSimple(e)})),i+="\n                </tbody>\n            </table>\n        "):i+="<p>No incentives found for this business.</p>",i+="</fieldset>",t.innerHTML=i;const s=document.getElementById("incentives-section");s&&s.scrollIntoView({behavior:"smooth"})}function formatIncentiveRow(e,n){const t=new Date(e.created_at).toLocaleDateString(),i=e.is_available?"Yes":"No",s=getIncentiveTypeLabel(e.type),o=e.other_description?`<br><em>(${e.other_description})</em>`:"";let c="N/A";e.is_available&&(c="dollar"===e.discount_type?`$${e.amount.toFixed(2)}`:`${e.amount}%`);const a=n?'<span class="chain-badge">Chain-wide</span>':'<span class="location-badge">Location only</span>';return`\n        <tr>\n            <td>${i}</td>\n            <td>${s}${o}</td>\n            <td>${c}</td>\n            <td>${e.information||""}</td>\n            <td>${a}</td>\n            <td>${t}</td>\n        </tr>\n    `}function formatIncentiveRowSimple(e){const n=new Date(e.created_at).toLocaleDateString(),t=e.is_available?"Yes":"No",i=getIncentiveTypeLabel(e.type),s=e.other_description?`<br><em>(${e.other_description})</em>`:"";let o="N/A";return e.is_available&&(o="dollar"===e.discount_type?`$${e.amount.toFixed(2)}`:`${e.amount}%`),`\n        <tr>\n            <td>${t}</td>\n            <td>${i}${s}</td>\n            <td>${o}</td>\n            <td>${e.information||""}</td>\n            <td>${n}</td>\n        </tr>\n    `}function getIncentiveTypeLabel(e){return{VT:"Veteran",AD:"Active Duty",FR:"First Responder",SP:"Spouse",OT:"Other"}[e]||e}function enhanceIncentiveUpdatePageWithChainSupport(e){console.log("🔧 ENHANCING: Update page with chain support for:",e.bname),e.chain_id?(console.log("🔗 This is a chain location, fetching both local and chain incentives"),setTimeout((()=>{fetchAndDisplayUpdatePageIncentives(e._id,e.chain_id,e.bname)}),100)):console.log("🏢 Regular business, using standard incentive fetching")}async function fetchAndDisplayUpdatePageIncentives(e,n,t){console.log("📊 FETCHING: Update page incentives for",t);const i=document.getElementById("incentives-table-container");if(i){i.innerHTML="<p>Loading incentives...</p>";try{const s=getIncentiveBaseURL();let o=[];console.log("📍 Fetching local incentives for business:",e);try{const n=await fetch(`${s}/api/combined-api.js?operation=incentives&business_id=${e}`),t=((await n.json()).results||[]).map((e=>({...e,is_chain_wide:!1,source:"local"})));console.log("📍 Local incentives:",t.length),o=o.concat(t)}catch(e){console.error("❌ Error fetching local incentives:",e)}if(n){console.log("🔗 Fetching chain incentives for chain:",n);try{const e=await fetch(`${s}/api/chains.js?operation=get_incentives&chain_id=${n}`),t=((await e.json()).incentives||[]).map((e=>({_id:e._id||`chain_${e.type}_${Date.now()}`,is_available:e.is_active,type:e.type,amount:e.amount,information:e.information,other_description:e.other_description,created_at:e.created_at||(new Date).toISOString(),discount_type:e.discount_type||"percentage",is_chain_wide:!0,source:"chain"}))).filter((e=>e.is_available));console.log("🔗 Chain incentives:",t.length),o=o.concat(t)}catch(e){console.error("❌ Error fetching chain incentives:",e)}}console.log("📊 Total incentives to display:",o.length),displayUpdatePageIncentives(o,t,i)}catch(e){console.error("❌ Error in fetchAndDisplayUpdatePageIncentives:",e),i.innerHTML=`<p class="error">Error loading incentives: ${e.message}</p>`}}else console.error("❌ Incentives table container not found")}function displayUpdatePageIncentives(e,n,t){if(console.log("🎨 DISPLAYING: Update page incentives for",n),!e||0===e.length)return void(t.innerHTML="<p>No incentives found for this business.</p>");const i=checkIfUserIsAdmin();console.log("👤 User is admin:",i);let s='\n        <table class="results-table">\n            <thead>\n                <tr>\n                    <th>Available</th>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Information</th>\n                    <th>Scope</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n    ';e.forEach((e=>{const n=e.is_available?"Yes":"No",t=getIncentiveTypeLabel(e.type),o="OT"===e.type&&e.other_description?`<br><em>(${e.other_description})</em>`:"";let c,a,l="N/A";e.is_available&&(l="dollar"===e.discount_type?`$${e.amount.toFixed(2)}`:`${e.amount}%`),!0===e.is_chain_wide?(c='<span class="chain-badge">Chain-wide</span>',a=i?`\n                    <button class="select-incentive admin-chain" data-incentive-id="${e._id}">\n                        Edit Chain Incentive\n                    </button>\n                `:'\n                    <div class="chain-admin-warning">\n                        <span class="chain-badge admin-only">Admin Only</span>\n                        <small style="display: block; color: #666; margin-top: 2px;">\n                            Only administrators can edit chain-wide incentives\n                        </small>\n                    </div>\n                '):(c='<span class="location-badge">Location only</span>',a=`\n                <button class="select-incentive" data-incentive-id="${e._id}">\n                    Edit\n                </button>\n            `),s+=`\n            <tr>\n                <td>${n}</td>\n                <td>${t}${o}</td>\n                <td>${l}</td>\n                <td>${e.information||""}</td>\n                <td>${c}</td>\n                <td>${a}</td>\n            </tr>\n        `})),s+="\n            </tbody>\n        </table>\n    ",t.innerHTML=s,document.querySelectorAll(".select-incentive").forEach((n=>{n.addEventListener("click",(function(){const n=this.getAttribute("data-incentive-id"),t=e.find((e=>e._id===n));if(t){if(t.is_chain_wide&&!i)return void alert("You don't have permission to edit chain-wide incentives.");const e=document.getElementById("selected-incentive-id");e&&(e.value=n),"function"==typeof window.loadIncentiveForEditing&&window.loadIncentiveForEditing(t)}}))})),console.log("✅ Update page incentives displayed successfully")}function checkIfUserIsAdmin(){try{const e=localStorage.getItem("patriotThanksSession");if(!e)return!1;const n=JSON.parse(e);return n.user&&(!0===n.user.isAdmin||"Admin"===n.user.level)}catch(e){return console.error("Error checking admin status:",e),!1}}function fetchBothLocalAndChainIncentives(e,n,t,i){console.log(`🔗 FIXED: Fetching both local and chain incentives for ${t}`),console.log(`   - Business ID: ${e}`),console.log(`   - Chain ID: ${n}`);const s=getIncentiveBaseURL(),o=fetch(`${s}/api/combined-api.js?operation=incentives&business_id=${e}`).then((e=>(console.log(`📍 Local incentives response status: ${e.status}`),e.json()))).catch((e=>(console.error("❌ Error fetching local incentives:",e),{results:[]}))),c=fetch(`${s}/api/chains.js?operation=get_incentives&chain_id=${n}`).then((e=>{if(console.log(`🔗 Chain incentives response status: ${e.status}`),!e.ok)throw new Error(`Chain incentives request failed: ${e.status}`);return e.json()})).catch((e=>(console.error("❌ Error fetching chain incentives:",e),console.log("🔄 Trying fallback with combined API..."),fetch(`${s}/api/combined-api.js?operation=get_chain_incentives&chain_id=${n}`).then((e=>e.json())).catch((e=>(console.error("❌ Fallback also failed:",e),{incentives:[]}))))));Promise.all([o,c]).then((([e,n])=>{console.log("📊 FIXED: Local incentives data:",e),console.log("📊 FIXED: Chain incentives data:",n);const s=e.results||[],o=n.incentives||[];console.log(`✅ FIXED: Found ${s.length} local + ${o.length} chain incentives`),displayCombinedIncentives(s,o,t,i)})).catch((e=>{console.error("❌ FIXED: Error fetching combined incentives:",e),i.innerHTML=`<p class="error">Error loading incentives: ${e.message}</p>`}))}function fetchLocalIncentivesOnly(e,n,t){console.log(`🏢 FIXED: Fetching local incentives only for ${n}`);const i=`${getIncentiveBaseURL()}/api/combined-api.js?operation=incentives&business_id=${e}`;console.log(`📡 FIXED: API URL: ${i}`),fetch(i).then((e=>{if(console.log(`📍 FIXED: Local incentives response status: ${e.status}`),!e.ok)throw new Error(`HTTP ${e.status}: ${e.statusText}`);return e.json()})).then((e=>{console.log("📊 FIXED: Local incentives data:",e);const i=e.results||[];console.log(`✅ FIXED: Found ${i.length} local incentives`),displayLocalIncentivesOnly(i,n,t)})).catch((e=>{console.error("❌ FIXED: Error fetching local incentives:",e),t.innerHTML=`<p class="error">Error loading incentives: ${e.message}</p>`}))}function displayCombinedIncentives(e,n,t,i){console.log(`🎨 FIXED: Displaying combined incentives for ${t}`),console.log(`   - Local: ${e.length}, Chain: ${n.length}`);let s=`\n        <fieldset id="incentives-section">\n            <legend>\n                <h3 class="caveat">Step 3: View Incentives for ${t}</h3>\n            </legend>\n    `;const o=e&&e.length>0,c=n&&n.length>0;o||c?(s+=`\n            <div class="incentives-summary">\n                <p><strong>Total Incentives:</strong> ${(e.length||0)+(n.length||0)}</p>\n                ${o?`<p>• <span class="location-badge">Location-specific</span>: ${e.length}</p>`:""}\n                ${c?`<p>• <span class="chain-badge">Chain-wide</span>: ${n.length}</p>`:""}\n            </div>\n        `,s+='\n            <table class="results-table">\n                <thead>\n                    <tr>\n                        <th>Available</th>\n                        <th>Type</th>\n                        <th>Amount</th>\n                        <th>Information</th>\n                        <th>Scope</th>\n                        <th>Date Added</th>\n                    </tr>\n                </thead>\n                <tbody>\n        ',o&&(console.log(`🏢 FIXED: Adding ${e.length} local incentives`),e.forEach((e=>{s+=formatIncentiveRow(e,!1)}))),c&&(console.log(`🔗 FIXED: Adding ${n.length} chain incentives`),n.forEach((e=>{if(!1!==e.is_active){const n={is_available:!1!==e.is_active,type:e.type,amount:e.amount,information:e.information,other_description:e.other_description,created_at:e.created_at||(new Date).toISOString(),discount_type:e.discount_type||"percentage",is_chain_wide:!0};s+=formatIncentiveRow(n,!0)}}))),s+="\n                </tbody>\n            </table>\n        "):s+="<p>No incentives found for this business.</p>",s+="</fieldset>",i.innerHTML=s,console.log("✅ FIXED: Combined incentives displayed successfully");const a=document.getElementById("incentives-section");a&&a.scrollIntoView({behavior:"smooth"})}document.addEventListener("DOMContentLoaded",(function(){console.log("Simple Incentive Search Handler Loaded!"),setTimeout((function(){initializeSimpleIncentiveSearch()}),200)})),window.selectBusinessForIncentiveView=async function(e){console.log("Selecting business for incentive view:",e);try{showIncentiveLoadingIndicator("Loading business details...");const n=await fetchIncentiveBusinessDetails(e);n?(console.log("Business details loaded for incentive view"),clearSearchResultsAndLoading(),"function"==typeof window.viewBusinessIncentives&&window.viewBusinessIncentives(n)):(hideIncentiveLoadingIndicator(),alert("Error: Could not load business details."))}catch(e){console.error("Error selecting business for incentive view:",e),hideIncentiveLoadingIndicator(),alert("Error: "+e.message)}},window.selectBusinessForIncentiveAdd=async function(e){console.log("Selecting business for incentive add:",e);try{showIncentiveLoadingIndicator("Loading business details...");const n=await fetchIncentiveBusinessDetails(e);n?(console.log("Business details loaded for incentive add"),clearSearchResultsAndLoading(),window.populateBusinessInfo=populateBusinessInfo,"function"==typeof window.selectBusinessForIncentive&&window.selectBusinessForIncentive(n)):(hideIncentiveLoadingIndicator(),alert("Error: Could not load business details."))}catch(e){console.error("Error selecting business for incentive add:",e),hideIncentiveLoadingIndicator(),alert("Error: "+e.message)}},window.selectBusinessForIncentiveUpdate=async function(e){console.log("Selecting business for incentive update:",e);try{showIncentiveLoadingIndicator("Loading business details...");const n=await fetchIncentiveBusinessDetails(e);n?(console.log("Business details loaded for incentive update"),clearSearchResultsAndLoading(),window.populateBusinessInfo=populateBusinessInfo,"function"==typeof window.selectBusinessForIncentives?window.selectBusinessForIncentives(n):"function"==typeof window.selectBusinessForIncentive&&window.selectBusinessForIncentive(n)):(hideIncentiveLoadingIndicator(),alert("Error: Could not load business details."))}catch(e){console.error("Error selecting business for incentive update:",e),hideIncentiveLoadingIndicator(),alert("Error: "+e.message)}},window.enhancedFetchIncentives=function(e,n,t){console.log("Enhanced fetchIncentives called for:",n,"ID:",e);let i=document.getElementById("incentives-container");if(!i){console.log("Creating incentives container"),i=document.createElement("div"),i.id="incentives-container";const e=document.getElementById("business-info-section");if(e&&e.parentNode)e.parentNode.insertBefore(i,e.nextSibling);else{const e=document.querySelector("main");e?e.appendChild(i):document.body.appendChild(i)}}i.innerHTML="<p>Loading incentives...</p>",console.log(`Fetching incentives for business ID: ${e}`);const s=!(!t||!t.chain_id),o=s?t.chain_id:null;getIncentiveBaseURL(),s&&o?(console.log(`This is a chain location. Chain ID: ${o}`),fetchBothLocalAndChainIncentives(e,o,n,i)):fetchLocalIncentivesOnly(e,n,i)},"function"==typeof window.fetchIncentives&&(window.originalFetchIncentives=window.fetchIncentives),window.fetchIncentives=window.enhancedFetchIncentives,window.selectBusinessForIncentiveView=async function(e){console.log("🔍 ENHANCED: Selecting business for incentive view:",e);try{showIncentiveLoadingIndicator("Loading business details...");const n=await fetchIncentiveBusinessDetails(e);if(n){console.log("✅ Business details loaded for incentive view:",n),console.log("   - Chain ID:",n.chain_id),console.log("   - Is Chain Location:",!!n.chain_id),clearSearchResultsAndLoading();const e=document.getElementById("business-info-section");e&&(e.style.display="block");const t=document.getElementById("selected-business-id");t&&(t.value=n._id||""),populateBusinessInfo(n),console.log("🎯 Calling enhanced incentive fetch for chain support"),setTimeout((()=>{window.enhancedFetchIncentives(n._id,n.bname,n)}),200)}else hideIncentiveLoadingIndicator(),alert("Error: Could not load business details.")}catch(e){console.error("❌ Error selecting business for incentive view:",e),hideIncentiveLoadingIndicator(),alert("Error: "+e.message)}},window.selectBusinessForIncentiveUpdate=async function(e){console.log("🔍 ENHANCED: Selecting business for incentive update:",e);try{showIncentiveLoadingIndicator("Loading business details...");const n=await fetchIncentiveBusinessDetails(e);n?(console.log("✅ Business details loaded for incentive update:",n),console.log("   - Chain ID:",n.chain_id),console.log("   - Is Chain Location:",!!n.chain_id),clearSearchResultsAndLoading(),window.populateBusinessInfo=populateBusinessInfo,"function"==typeof window.selectBusinessForIncentives?window.selectBusinessForIncentives(n):"function"==typeof window.selectBusinessForIncentive&&window.selectBusinessForIncentive(n),setTimeout((()=>{enhanceIncentiveUpdatePageWithChainSupport(n)}),500)):(hideIncentiveLoadingIndicator(),alert("Error: Could not load business details."))}catch(e){console.error("❌ Error selecting business for incentive update:",e),hideIncentiveLoadingIndicator(),alert("Error: "+e.message)}},console.log("🎯 Chain Incentive Display Fix loaded successfully!"),window.selectBusinessForIncentiveView=async function(e){console.log("🔍 FIXED: Selecting business for incentive view:",e);try{showIncentiveLoadingIndicator("Loading business details...");const n=await fetchIncentiveBusinessDetails(e);if(n){console.log("✅ FIXED: Business details loaded:",n),console.log("   - Chain ID:",n.chain_id),console.log("   - Is Chain Location:",!!n.chain_id),clearSearchResultsAndLoading();const e=document.getElementById("business-info-section");e&&(e.style.display="block");const t=document.getElementById("selected-business-id");t&&(t.value=n._id||""),populateBusinessInfo(n),console.log("🎯 FIXED: Calling enhanced incentive fetch for chain support"),setTimeout((()=>{try{window.enhancedFetchIncentives(n._id,n.bname,n)}catch(e){console.error("❌ FIXED: Error in enhanced fetch:",e),"function"==typeof window.fetchIncentives&&window.fetchIncentives(n._id,n.bname)}}),200)}else hideIncentiveLoadingIndicator(),alert("Error: Could not load business details.")}catch(e){console.error("❌ FIXED: Error selecting business for incentive view:",e),hideIncentiveLoadingIndicator(),alert("Error: "+e.message)}},window.enhancedFetchIncentives=function(e,n,t){console.log("🚀 FIXED: Enhanced fetchIncentives called for:",n,"ID:",e),console.log("📋 FIXED: Business data:",t);let i=document.getElementById("incentives-container");if(!i){console.log("🔧 FIXED: Creating incentives container"),i=document.createElement("div"),i.id="incentives-container";const e=document.getElementById("business-info-section");if(e&&e.parentNode)e.parentNode.insertBefore(i,e.nextSibling);else{const e=document.querySelector("main");e?e.appendChild(i):document.body.appendChild(i)}}i.innerHTML="<p>Loading incentives...</p>",console.log(`🔍 FIXED: Fetching incentives for business ID: ${e}`);const s=!(!t||!t.chain_id),o=s?t.chain_id:null;console.log(`🔗 FIXED: Chain analysis - Is Chain: ${s}, Chain ID: ${o}`),s&&o?(console.log("🔗 FIXED: This is a chain location. Fetching both local and chain incentives"),fetchBothLocalAndChainIncentives(e,o,n,i)):(console.log("🏢 FIXED: Regular business - fetch only local incentives"),fetchLocalIncentivesOnly(e,n,i))};