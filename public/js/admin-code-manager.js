async function checkAdminAccess(){try{const e=getAuthToken();if(!e)return console.error("No auth token found"),!1;const t=getBaseUrl(),o=await fetch(`${t}/api/auth.js?operation=verify-token`,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Cache-Control":"no-cache"}});if(!o.ok)return 401===o.status&&(window.location.href="/index.html?login=required&redirect="+encodeURIComponent(window.location.pathname),!1);const n=await o.json();return!0===n.isAdmin||"Admin"===n.level}catch(e){return console.error("Error checking admin status:",e),"localhost"!==window.location.hostname&&"127.0.0.1"!==window.location.hostname||!confirm("API error encountered. Would you like to bypass admin verification for development purposes?")?!1:(console.warn("DEVELOPMENT MODE: Bypassing admin verification"),!0)}}function getAuthToken(){try{const e=localStorage.getItem("patriotThanksSession");if(!e)return null;const t=JSON.parse(e);return t.token?t.token:null}catch(e){return console.error("Error retrieving auth token:",e),null}}function getBaseUrl(){return"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?`http://${window.location.host}`:"https://patriotthanks.vercel.app"}function showAccessDenied(){document.querySelector(".container").innerHTML='\n        <div class="alert alert-danger" role="alert">\n            <h4 class="alert-heading">Access Denied</h4>\n            <p>You do not have permission to access this page. Only administrators can manage access codes.</p>\n            <hr>\n            <p class="mb-0">Please <a href="/index.html">return to the homepage</a> or contact an administrator if you believe this is an error.</p>\n        </div>\n    '}async function loadExistingCodes(){try{const e=getAuthToken(),t=getBaseUrl(),o=await fetch(`${t}/api/combined-api/admin-codes.js?operation=list`,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Cache-Control":"no-cache"}});if(!o.ok)throw new Error(`Server error: ${o.status}`);displayCodes((await o.json()).codes||[])}catch(e){console.error("Error loading admin codes:",e),"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?(console.warn("DEVELOPMENT MODE: Using mock data"),displayMockCodes()):document.getElementById("codes-table-body").innerHTML='\n                <tr>\n                    <td colspan="4" class="text-center">Error loading access codes. Please try again later.</td>\n                </tr>\n            '}}function displayCodes(e){const t=document.getElementById("codes-table-body");if(!e||0===e.length)return void(t.innerHTML='\n            <tr>\n                <td colspan="4" class="text-center">No access codes found. Create a new one to get started.</td>\n            </tr>\n        ');const o=e.map((e=>{const t=e.expiration?new Date(e.expiration).toLocaleDateString():"Never expires";return`\n            <tr data-code-id="${e._id}">\n                <td>${e.code}</td>\n                <td>${e.description}</td>\n                <td>${t}</td>\n                <td>\n                    <button class="btn btn-sm btn-danger delete-code-btn" data-code-id="${e._id}">\n                        <i class="bi bi-trash"></i> Delete\n                    </button>\n                </td>\n            </tr>\n        `})).join("");t.innerHTML=o,document.querySelectorAll(".delete-code-btn").forEach((e=>{e.addEventListener("click",handleDeleteCode)}))}function displayMockCodes(){displayCodes([{_id:"mock1",code:"ADMIN123",description:"Development admin access code",expiration:new Date("2026-12-31")},{_id:"mock2",code:"TEMPACCESS",description:"Temporary access for demo",expiration:new Date("2025-06-30")},{_id:"mock3",code:"VETERAN2025",description:"Veteran admin registration",expiration:null}])}function setupEventListeners(){const e=document.getElementById("create-code-form");e&&e.addEventListener("submit",handleCreateCode)}async function handleCreateCode(e){e.preventDefault();const t=document.getElementById("accessCode").value.trim(),o=document.getElementById("codeDescription").value.trim(),n=document.getElementById("expirationDate").value;if(!t||!o)return void showAlert("Please enter both a code and description","danger");const c={code:t,description:o,expiration:n||null};try{const e=getAuthToken(),t=getBaseUrl(),o=await fetch(`${t}/api/combined-api/admin-codes.js?operation=create`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(c)});if(!o.ok){const e=await o.json();throw new Error(e.message||"Failed to create access code")}showAlert("Access code created successfully","success"),document.getElementById("create-code-form").reset(),loadExistingCodes()}catch(e){if(console.error("Error creating admin code:",e),showAlert(e.message||"Error creating access code","danger"),"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname){console.warn("DEVELOPMENT MODE: Simulating successful code creation"),showAlert("Access code created successfully (DEVELOPMENT MODE)","success"),document.getElementById("create-code-form").reset();const e={_id:"mock"+Math.floor(1e3*Math.random()),code:t,description:o,expiration:n?new Date(n):null},c=document.getElementById("codes-table-body");let s=[];c.innerHTML.includes("No access codes found")?s=[]:document.querySelectorAll("#codes-table-body tr").forEach((e=>{const t=e.getAttribute("data-code-id");if(t&&!t.includes("mock")){const o=e.querySelectorAll("td");s.push({_id:t,code:o[0].textContent,description:o[1].textContent,expiration:"Never expires"!==o[2].textContent?new Date(o[2].textContent):null})}})),s.push(e),displayCodes(s)}}}async function handleDeleteCode(e){if(e.preventDefault(),!confirm("Are you sure you want to delete this access code? This action cannot be undone."))return;const t=e.currentTarget.getAttribute("data-code-id");try{const e=getAuthToken(),o=getBaseUrl(),n=await fetch(`${o}/api/combined-api/admin-codes.js?operation=delete`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({codeId:t})});if(!n.ok){const e=await n.json();throw new Error(e.message||"Failed to delete access code")}showAlert("Access code deleted successfully","success");const c=document.querySelector(`tr[data-code-id="${t}"]`);if(c){c.remove();const e=document.getElementById("codes-table-body");0===e.children.length&&(e.innerHTML='\n                    <tr>\n                        <td colspan="4" class="text-center">No access codes found. Create a new one to get started.</td>\n                    </tr>\n                ')}}catch(e){if(console.error("Error deleting admin code:",e),showAlert(e.message||"Error deleting access code","danger"),"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname){console.warn("DEVELOPMENT MODE: Simulating successful code deletion"),showAlert("Access code deleted successfully (DEVELOPMENT MODE)","success");const e=document.querySelector(`tr[data-code-id="${t}"]`);if(e){e.remove();const t=document.getElementById("codes-table-body");0===t.children.length&&(t.innerHTML='\n                        <tr>\n                            <td colspan="4" class="text-center">No access codes found. Create a new one to get started.</td>\n                        </tr>\n                    ')}}}}function showAlert(e,t){let o=document.getElementById("alert-container");o||(o=document.createElement("div"),o.id="alert-container",o.style.position="fixed",o.style.top="70px",o.style.right="20px",o.style.maxWidth="400px",o.style.zIndex="1050",document.body.appendChild(o));const n="alert-"+Date.now(),c=document.createElement("div");c.id=n,c.className=`alert alert-${t} alert-dismissible fade show`,c.role="alert",c.innerHTML=`\n        ${e}\n        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n    `,o.appendChild(c);const s=new bootstrap.Alert(c);setTimeout((()=>{document.getElementById(n)&&s.close()}),5e3),c.addEventListener("closed.bs.alert",(function(){c.remove()}))}document.addEventListener("DOMContentLoaded",(function(){checkAdminAccess().then((e=>{e?(loadExistingCodes(),setupEventListeners()):showAccessDenied()}))}));