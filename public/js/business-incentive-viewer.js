function populateBusinessInfo(e){if(e){console.log("Populating business info with: ",e);try{const n=document.getElementById("bname");n?(console.log(`Setting bname to ${e.bname||""}`),n.value=e.bname||""):console.warn("Field bname not found in the DOM");const t=document.getElementById("address1");t?(console.log(`Setting address1 to ${e.address1||""}`),t.value=e.address1||""):console.warn("Field address1 not found in the DOM");const o=document.getElementById("address2");o?(console.log(`Setting address2 to ${e.address2||""}`),o.value=e.address2||""):console.warn("Field address2 not found in the DOM");const i=document.getElementById("city");i?(console.log(`Setting city to ${e.city||""}`),i.value=e.city||""):console.warn("Field city not found in the DOM");const s=document.getElementById("zip");s?(console.log(`Setting zip to ${e.zip||""}`),s.value=e.zip||""):console.warn("Field zip not found in the DOM");const c=document.getElementById("phone");c?(console.log(`Setting phone to ${e.phone||""}`),c.value=e.phone||""):console.warn("Field phone not found in the DOM");const l=document.getElementById("state");if(l){const n=e.state||"";console.log(`Setting state to ${n}`);for(let e=0;e<l.options.length;e++)if(l.options[e].value===n){l.selectedIndex=e;break}}else console.warn("Field state not found in the DOM");const d=document.getElementById("type");if(d){const n=e.type||"";console.log(`Setting type to ${n}`);for(let e=0;e<d.options.length;e++)if(d.options[e].value===n){d.selectedIndex=e;break}}else console.warn("Field type not found in the DOM");console.log("Business info populated successfully")}catch(e){console.error("Error in populateBusinessInfo",e)}}else console.error("No business data provided to populateBusinessInfo")}function fetchIncentives(e,n){let t=document.getElementById("incentives-container");if(!t){console.log("creating the incentives container"),t=document.createElement("div"),t.id="incentives-container";const e=document.getElementById("business-info-section");if(e&&e.parentNode)e.parentNode.insertBefore(t,e.nextSibling);else{const e=document.querySelector("main");e?e.appendChild(t):document.body.appendChild(t)}}t.innerHTML="<p>Loading incentives...</p>",console.log("Fetching incentives for business ID: ",e);const o=`${"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?`https://${window.location.host}`:window.location.origin}/api/combined-api.js?operation=incentives&business_id=${e}`;console.log("Fetching from URL: ",o),fetch(o).then((e=>{if(!e.ok)throw new Error(`Failed to fetch incentives: ${e.status} ${e.statusText}`);return e.json()})).then((e=>{console.log("Incentives data received: ",e);let o=`\n                    <fieldset id="incentives-section">\n                        <legend>\n                            <h3 class="caveat">Step 3: View Incentives for ${n}</h3>\n                        </legend>\n                `;e.results&&0!==e.results.length?(o+='\n                        <table class="results-table">\n                            <thead>\n                                <tr>\n                                    <th>Available</th>\n                                    <th>Type</th>\n                                    <th>Amount (%)</th>\n                                    <th>Information</th>\n                                    <th>Date Added</th>\n                                </tr>\n                            </thead>\n                        <tbody>\n                    ',e.results.forEach((e=>{const n=new Date(e.created_at).toLocaleDateString(),t=e.is_available?"Yes":"No",i=getIncentiveTypeLabel(e.type),s=e.other_description?`<br><em>(${e.other_description})</em>`:"";o+=`\n                            <tr>\n                                <td>${t}</td>\n                                <td>${i}${s}</td>\n                                <td>${e.is_available?e.amount+"%":"N/A"}</td>\n                                <td>${e.information}</td>\n                                <td>${n}</td>\n                            </tr>\n                        `})),o+="\n                        </tbody>\n                    </table>\n                "):o+="<p>No incentives found for this business.</p>",o+="</fieldset>",t.innerHTML=o;const i=document.getElementById("incentives-section");i&&i.scrollIntoView({behavior:"smooth"})})).catch((e=>{console.error("Error in fetching incentives: ",e),t.innerHTML=`<p class="error">Error in fetching incentives: ${e.message}</p>`}))}function getIncentiveTypeLabel(e){return{VT:"Veteran",AD:"Active Duty",FR:"First Responder",SP:"Spouse",OT:"Other"}[e]||e}window.viewBusinessIncentives=function(e){console.log("viewBusinessIncentives called with business: ",e);const n=document.getElementById("business-info-section");n?n.style.display="block":console.error("business-info-section not found in the DOM");const t=document.getElementById("selected-business-id");t&&(t.value=e._id||""),populateBusinessInfo(e),e&&e._id&&fetchIncentives(e._id,e.bname)},document.addEventListener("DOMContentLoaded",(function(){console.log("Business incentives viewer loaded!");const e=window.location.pathname;if(e.includes("incentive-view.html")||e.endsWith("business-search.html")){console.log("on incentive-view or business-search page, initializing viewer");const e=document.getElementById("business-info-section");e?e.style.display="none":console.warn("business-info-section not found in the DOM");let n=document.getElementById("incentives-container");if(!n)if(n=document.createElement("div"),n.id="incentives-container",e&&e.parentNode)e.parentNode.insertBefore(n,e.nextSibling);else{const e=document.querySelector("main");e?e.appendChild(n):(console.warn("Could not find the proper parent for incentives container"),document.body.appendChild(n))}}}));